// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.4
// source: MaoService.proto

package api

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type LoginInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocalIp string `protobuf:"bytes,1,opt,name=localIp,proto3" json:"localIp,omitempty"`
	Key     string `protobuf:"bytes,10,opt,name=key,proto3" json:"key,omitempty"` // SSL cert encrypted localIp
}

func (x *LoginInfo) Reset() {
	*x = LoginInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MaoService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginInfo) ProtoMessage() {}

func (x *LoginInfo) ProtoReflect() protoreflect.Message {
	mi := &file_MaoService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginInfo.ProtoReflect.Descriptor instead.
func (*LoginInfo) Descriptor() ([]byte, []int) {
	return file_MaoService_proto_rawDescGZIP(), []int{0}
}

func (x *LoginInfo) GetLocalIp() string {
	if x != nil {
		return x.LocalIp
	}
	return ""
}

func (x *LoginInfo) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type LoginResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Cookie  string `protobuf:"bytes,2,opt,name=cookie,proto3" json:"cookie,omitempty"`
}

func (x *LoginResult) Reset() {
	*x = LoginResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MaoService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResult) ProtoMessage() {}

func (x *LoginResult) ProtoReflect() protoreflect.Message {
	mi := &file_MaoService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResult.ProtoReflect.Descriptor instead.
func (*LoginResult) Descriptor() ([]byte, []int) {
	return file_MaoService_proto_rawDescGZIP(), []int{1}
}

func (x *LoginResult) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *LoginResult) GetCookie() string {
	if x != nil {
		return x.Cookie
	}
	return ""
}

type NodeFeature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	IPs    []string `protobuf:"bytes,2,rep,name=IPs,proto3" json:"IPs,omitempty"`
	Cookie string   `protobuf:"bytes,10,opt,name=cookie,proto3" json:"cookie,omitempty"`
}

func (x *NodeFeature) Reset() {
	*x = NodeFeature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MaoService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeFeature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeFeature) ProtoMessage() {}

func (x *NodeFeature) ProtoReflect() protoreflect.Message {
	mi := &file_MaoService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeFeature.ProtoReflect.Descriptor instead.
func (*NodeFeature) Descriptor() ([]byte, []int) {
	return file_MaoService_proto_rawDescGZIP(), []int{2}
}

func (x *NodeFeature) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NodeFeature) GetIPs() []string {
	if x != nil {
		return x.IPs
	}
	return nil
}

func (x *NodeFeature) GetCookie() string {
	if x != nil {
		return x.Cookie
	}
	return ""
}

type NodeStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cpu     float64 `protobuf:"fixed64,1,opt,name=cpu,proto3" json:"cpu,omitempty"`
	CpuTemp float64 `protobuf:"fixed64,2,opt,name=cpuTemp,proto3" json:"cpuTemp,omitempty"`
	GpuTemp float64 `protobuf:"fixed64,3,opt,name=gpuTemp,proto3" json:"gpuTemp,omitempty"`
	EnvTemp float64 `protobuf:"fixed64,4,opt,name=envTemp,proto3" json:"envTemp,omitempty"`
	SysTime string  `protobuf:"bytes,5,opt,name=sysTime,proto3" json:"sysTime,omitempty"`
	Cookie  string  `protobuf:"bytes,10,opt,name=cookie,proto3" json:"cookie,omitempty"`
}

func (x *NodeStatus) Reset() {
	*x = NodeStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MaoService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeStatus) ProtoMessage() {}

func (x *NodeStatus) ProtoReflect() protoreflect.Message {
	mi := &file_MaoService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeStatus.ProtoReflect.Descriptor instead.
func (*NodeStatus) Descriptor() ([]byte, []int) {
	return file_MaoService_proto_rawDescGZIP(), []int{3}
}

func (x *NodeStatus) GetCpu() float64 {
	if x != nil {
		return x.Cpu
	}
	return 0
}

func (x *NodeStatus) GetCpuTemp() float64 {
	if x != nil {
		return x.CpuTemp
	}
	return 0
}

func (x *NodeStatus) GetGpuTemp() float64 {
	if x != nil {
		return x.GpuTemp
	}
	return 0
}

func (x *NodeStatus) GetEnvTemp() float64 {
	if x != nil {
		return x.EnvTemp
	}
	return 0
}

func (x *NodeStatus) GetSysTime() string {
	if x != nil {
		return x.SysTime
	}
	return ""
}

func (x *NodeStatus) GetCookie() string {
	if x != nil {
		return x.Cookie
	}
	return ""
}

type OkFlag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *OkFlag) Reset() {
	*x = OkFlag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MaoService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OkFlag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OkFlag) ProtoMessage() {}

func (x *OkFlag) ProtoReflect() protoreflect.Message {
	mi := &file_MaoService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OkFlag.ProtoReflect.Descriptor instead.
func (*OkFlag) Descriptor() ([]byte, []int) {
	return file_MaoService_proto_rawDescGZIP(), []int{4}
}

func (x *OkFlag) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MaoService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_MaoService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_MaoService_proto_rawDescGZIP(), []int{5}
}

var File_MaoService_proto protoreflect.FileDescriptor

var file_MaoService_proto_rawDesc = []byte{
	0x0a, 0x10, 0x4d, 0x61, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x04, 0x67, 0x72, 0x70, 0x63, 0x22, 0x37, 0x0a, 0x09, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x70, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x22, 0x3f, 0x0a, 0x0b, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f,
	0x6f, 0x6b, 0x69, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6f, 0x6b,
	0x69, 0x65, 0x22, 0x4b, 0x0a, 0x0b, 0x4e, 0x6f, 0x64, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x49, 0x50, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x03, 0x49, 0x50, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6f, 0x6b, 0x69,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x22,
	0x9e, 0x01, 0x0a, 0x0a, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10,
	0x0a, 0x03, 0x63, 0x70, 0x75, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x63, 0x70, 0x75,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x70, 0x75, 0x54, 0x65, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x07, 0x63, 0x70, 0x75, 0x54, 0x65, 0x6d, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x70,
	0x75, 0x54, 0x65, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x67, 0x70, 0x75,
	0x54, 0x65, 0x6d, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x76, 0x54, 0x65, 0x6d, 0x70, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x65, 0x6e, 0x76, 0x54, 0x65, 0x6d, 0x70, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x79, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x79, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6f, 0x6b,
	0x69, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65,
	0x22, 0x22, 0x0a, 0x06, 0x4f, 0x6b, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0x32, 0x0a,
	0x03, 0x41, 0x41, 0x41, 0x12, 0x2b, 0x0a, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x0f, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x11,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x32, 0x68, 0x0a, 0x04, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x30, 0x0a, 0x0d, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x11, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x1a, 0x0c, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x4f, 0x6b, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x2e, 0x0a, 0x0c, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0x0c, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x4f, 0x6b, 0x46, 0x6c, 0x61, 0x67, 0x42, 0x1e, 0x5a, 0x1c, 0x66,
	0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x6d, 0x61, 0x6f, 0x6a, 0x69, 0x61, 0x6e,
	0x77, 0x65, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_MaoService_proto_rawDescOnce sync.Once
	file_MaoService_proto_rawDescData = file_MaoService_proto_rawDesc
)

func file_MaoService_proto_rawDescGZIP() []byte {
	file_MaoService_proto_rawDescOnce.Do(func() {
		file_MaoService_proto_rawDescData = protoimpl.X.CompressGZIP(file_MaoService_proto_rawDescData)
	})
	return file_MaoService_proto_rawDescData
}

var file_MaoService_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_MaoService_proto_goTypes = []interface{}{
	(*LoginInfo)(nil),   // 0: grpc.LoginInfo
	(*LoginResult)(nil), // 1: grpc.LoginResult
	(*NodeFeature)(nil), // 2: grpc.NodeFeature
	(*NodeStatus)(nil),  // 3: grpc.NodeStatus
	(*OkFlag)(nil),      // 4: grpc.OkFlag
	(*Empty)(nil),       // 5: grpc.Empty
}
var file_MaoService_proto_depIdxs = []int32{
	0, // 0: grpc.AAA.login:input_type -> grpc.LoginInfo
	2, // 1: grpc.Node.reportFeature:input_type -> grpc.NodeFeature
	3, // 2: grpc.Node.reportStatus:input_type -> grpc.NodeStatus
	1, // 3: grpc.AAA.login:output_type -> grpc.LoginResult
	4, // 4: grpc.Node.reportFeature:output_type -> grpc.OkFlag
	4, // 5: grpc.Node.reportStatus:output_type -> grpc.OkFlag
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_MaoService_proto_init() }
func file_MaoService_proto_init() {
	if File_MaoService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_MaoService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MaoService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MaoService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeFeature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MaoService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MaoService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OkFlag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MaoService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_MaoService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_MaoService_proto_goTypes,
		DependencyIndexes: file_MaoService_proto_depIdxs,
		MessageInfos:      file_MaoService_proto_msgTypes,
	}.Build()
	File_MaoService_proto = out.File
	file_MaoService_proto_rawDesc = nil
	file_MaoService_proto_goTypes = nil
	file_MaoService_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AAAClient is the client API for AAA service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AAAClient interface {
	Login(ctx context.Context, in *LoginInfo, opts ...grpc.CallOption) (*LoginResult, error)
}

type aAAClient struct {
	cc grpc.ClientConnInterface
}

func NewAAAClient(cc grpc.ClientConnInterface) AAAClient {
	return &aAAClient{cc}
}

func (c *aAAClient) Login(ctx context.Context, in *LoginInfo, opts ...grpc.CallOption) (*LoginResult, error) {
	out := new(LoginResult)
	err := c.cc.Invoke(ctx, "/grpc.AAA/login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AAAServer is the server API for AAA service.
type AAAServer interface {
	Login(context.Context, *LoginInfo) (*LoginResult, error)
}

// UnimplementedAAAServer can be embedded to have forward compatible implementations.
type UnimplementedAAAServer struct {
}

func (*UnimplementedAAAServer) Login(context.Context, *LoginInfo) (*LoginResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login not implemented")
}

func RegisterAAAServer(s *grpc.Server, srv AAAServer) {
	s.RegisterService(&_AAA_serviceDesc, srv)
}

func _AAA_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AAAServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.AAA/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AAAServer).Login(ctx, req.(*LoginInfo))
	}
	return interceptor(ctx, in, info, handler)
}

var _AAA_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc.AAA",
	HandlerType: (*AAAServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "login",
			Handler:    _AAA_Login_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "MaoService.proto",
}

// NodeClient is the client API for Node service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NodeClient interface {
	ReportFeature(ctx context.Context, in *NodeFeature, opts ...grpc.CallOption) (*OkFlag, error)
	ReportStatus(ctx context.Context, in *NodeStatus, opts ...grpc.CallOption) (*OkFlag, error)
}

type nodeClient struct {
	cc grpc.ClientConnInterface
}

func NewNodeClient(cc grpc.ClientConnInterface) NodeClient {
	return &nodeClient{cc}
}

func (c *nodeClient) ReportFeature(ctx context.Context, in *NodeFeature, opts ...grpc.CallOption) (*OkFlag, error) {
	out := new(OkFlag)
	err := c.cc.Invoke(ctx, "/grpc.Node/reportFeature", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeClient) ReportStatus(ctx context.Context, in *NodeStatus, opts ...grpc.CallOption) (*OkFlag, error) {
	out := new(OkFlag)
	err := c.cc.Invoke(ctx, "/grpc.Node/reportStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NodeServer is the server API for Node service.
type NodeServer interface {
	ReportFeature(context.Context, *NodeFeature) (*OkFlag, error)
	ReportStatus(context.Context, *NodeStatus) (*OkFlag, error)
}

// UnimplementedNodeServer can be embedded to have forward compatible implementations.
type UnimplementedNodeServer struct {
}

func (*UnimplementedNodeServer) ReportFeature(context.Context, *NodeFeature) (*OkFlag, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReportFeature not implemented")
}
func (*UnimplementedNodeServer) ReportStatus(context.Context, *NodeStatus) (*OkFlag, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReportStatus not implemented")
}

func RegisterNodeServer(s *grpc.Server, srv NodeServer) {
	s.RegisterService(&_Node_serviceDesc, srv)
}

func _Node_ReportFeature_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NodeFeature)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServer).ReportFeature(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Node/ReportFeature",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServer).ReportFeature(ctx, req.(*NodeFeature))
	}
	return interceptor(ctx, in, info, handler)
}

func _Node_ReportStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NodeStatus)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServer).ReportStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Node/ReportStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServer).ReportStatus(ctx, req.(*NodeStatus))
	}
	return interceptor(ctx, in, info, handler)
}

var _Node_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc.Node",
	HandlerType: (*NodeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "reportFeature",
			Handler:    _Node_ReportFeature_Handler,
		},
		{
			MethodName: "reportStatus",
			Handler:    _Node_ReportStatus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "MaoService.proto",
}
